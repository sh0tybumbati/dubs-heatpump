name: Build Mod

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'

    - name: Create lib directory and download dependencies
      run: |
        mkdir -p lib

        # Download DubsBadHygiene from GitHub releases
        wget -q https://github.com/Dubwise56/Dubs-Bad-Hygiene/releases/latest/download/DubsBadHygiene.dll -O lib/DubsBadHygiene.dll || echo "Warning: DubsBadHygiene download failed"

    - name: Convert project to SDK-style with RimRef
      run: |
        cd Source/DubsHeatPumps

        # Backup original files
        cp DubsHeatPumps.csproj DubsHeatPumps.csproj.bak

        # Create SDK-style .csproj with RimRef
        cat > DubsHeatPumps.csproj <<'EOFPROJECT'
        <Project Sdk="Microsoft.NET.Sdk">
          <PropertyGroup>
            <TargetFramework>net472</TargetFramework>
            <OutputPath>../../Assemblies/</OutputPath>
            <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
            <DebugType>none</DebugType>
            <LangVersion>latest</LangVersion>
            <RootNamespace>DubsHeatPumps</RootNamespace>
          </PropertyGroup>

          <ItemGroup>
            <PackageReference Include="Krafs.Rimworld.Ref" Version="1.5.4104" />
            <PackageReference Include="Lib.Harmony" Version="2.3.3" />
          </ItemGroup>

          <ItemGroup>
            <Reference Include="DubsBadHygiene">
              <HintPath>../../lib/DubsBadHygiene.dll</HintPath>
              <Private>False</Private>
            </Reference>
          </ItemGroup>
        </Project>
        EOFPROJECT

    - name: Restore dependencies
      run: |
        cd Source/DubsHeatPumps
        dotnet restore

    - name: Build
      run: |
        cd Source/DubsHeatPumps
        dotnet build -c Release --no-restore

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: DubsHeatPumps-dll
        path: Assemblies/*.dll
        if-no-files-found: warn

    - name: Create release on tag
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          Assemblies/*.dll
          About/**
          Defs/**
          README.md
          LICENSE
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
